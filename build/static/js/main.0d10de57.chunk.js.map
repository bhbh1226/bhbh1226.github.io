{"version":3,"sources":["components/Background.js","App.js","reportWebVitals.js","index.js"],"names":["screen_size","window","innerWidth","max_screen_size","max_star_light_size","max_star_dark_size","max_line_light_size","max_line_dark_size","Star","type","useState","Math","random","left","setLeft","top","size","setSize","useEffect","ceil","className","style","width","height","fontSize","Line","setHeight","setWidth","setTop","Sea","duration","motion","div","animate","transition","ease","repeat","Infinity","getParallax","value","input","output","result","map","item","index","Background","globalLeft","setGlobalLeft","cloudWhiteLeft","setCloudWhiteLeft","cloudPinkLeft","setCloudPinkLeft","cloudIvoryLeft","setCloudIvoryLeft","lineLightLeft","setLineLightLeft","lineDarkLeft","setLineDarkLeft","starLightLeft","setStarLightLeft","starDarkLeft","setStarDarkLeft","containerRef","createRef","arrayMaker","length","Array","apply","current","addEventListener","event","l","max","min","deltaY","preventDefault","id","ref","x","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d10de57.chunk.js","sourcesContent":["import { createRef, useEffect, useState } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport '../styles/Background.scss'\r\n\r\nconst screen_count = 6\r\nconst screen_size = window.innerWidth\r\nconst max_screen_size = screen_size * (screen_count - 1)\r\nconst max_star_light_size = max_screen_size / 14\r\nconst max_star_dark_size = max_screen_size / 10\r\nconst max_line_light_size = max_screen_size / 12\r\nconst max_line_dark_size = max_screen_size / 8\r\n\r\nconst Star = ({ type }) => {\r\n  const [left, setLeft] = useState(Math.random() * 100 + '%')\r\n  const [top] = useState(Math.random() * 40 + '%')\r\n  const [size, setSize] = useState('0')\r\n\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case 'light':\r\n        setLeft(Math.random() * (screen_size + max_star_light_size) + 'px')\r\n        setSize(Math.ceil(Math.random() * 30) + 1 + 'px')\r\n        break\r\n      case 'dark':\r\n        setLeft(Math.random() * (screen_size + max_star_dark_size) + 'px')\r\n        setSize(Math.ceil(Math.random() * 14) + 1 + 'px')\r\n        break\r\n      default:\r\n        setSize(Math.ceil(Math.random() * 30) + 1 + 'px')\r\n    }\r\n  }, [type])\r\n\r\n  switch (type) {\r\n    case 'light':\r\n      return (\r\n        <div className=\"star light\" style={{ width: size, height: size, fontSize: size, left, top }} />\r\n      )\r\n    case 'dark': \r\n      return (\r\n        <div className=\"star dark\" style={{ width: size, height: size, left, top }} />\r\n      )\r\n    default:\r\n      return (\r\n        <div className=\"star dark\" style={{ width: size, height: size, left, top }} />\r\n      )\r\n  }\r\n}\r\n\r\nconst Line = ({ type }) => {\r\n  const [height, setHeight] = useState('0')\r\n  const [width, setWidth] = useState('0')\r\n  const [left, setLeft] = useState('0')\r\n  const [top, setTop] = useState('0')\r\n\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case 'light':\r\n        setHeight(Math.random() * (15 - 10) + 10 + 'px')\r\n        setWidth(Math.random() * (800 - 400) + 400 + 'px')\r\n        setLeft(Math.random() * (screen_size + max_line_light_size) + 'px')\r\n        setTop(Math.random() * 40 + '%')\r\n        break\r\n      case 'dark':\r\n        setHeight(Math.random() * (40 - 28) + 10 + 'px')\r\n        setWidth(Math.random() * (800 - 400) + 400 + 'px')\r\n        setLeft(Math.random() * (screen_size + max_line_dark_size) + 'px')\r\n        setTop(Math.random() * (70 - 40) + 40 + '%')\r\n        break\r\n      default:\r\n    }\r\n  }, [type])\r\n\r\n  switch (type) {\r\n    case 'light':\r\n      return (\r\n        <div className=\"line light\" style={{ width, height, left, top }} />\r\n      )\r\n    case 'dark':\r\n      return (\r\n        <div className=\"line dark\" style={{ width, height, left, top }} />\r\n      )\r\n    default:\r\n      return (\r\n        <div className=\"line light\" style={{ width, height, left, top }} />\r\n      )\r\n  }\r\n}\r\n\r\nconst Sea = ({ left, duration }) => {\r\n  return (\r\n    <motion.div className=\"sea\" animate={{ \r\n      left: [null, left, 0], \r\n      transition: { \r\n        ease: ['easeIn', 'easeInOut'], \r\n        duration,\r\n        repeat: Infinity } \r\n      }} />\r\n  )\r\n}\r\n\r\nconst getParallax = (value, input, output) => {\r\n  let result = 0;\r\n  \r\n  input.map((item, index) => {\r\n    if (value <= item) {\r\n      if (index === 0) result = output[0]\r\n      else result = (value / (input[index] - input[index - 1])) * (output[index] - output[index - 1]) + output[index - 1]\r\n    }\r\n  })\r\n\r\n  return result\r\n}\r\n\r\nconst Background = () => {\r\n  const [globalLeft, setGlobalLeft] = useState(0)\r\n  const [cloudWhiteLeft, setCloudWhiteLeft] = useState(0)\r\n  const [cloudPinkLeft, setCloudPinkLeft] = useState(0)\r\n  const [cloudIvoryLeft, setCloudIvoryLeft] = useState(0)\r\n  const [lineLightLeft, setLineLightLeft] = useState(0)\r\n  const [lineDarkLeft, setLineDarkLeft] = useState(0)\r\n  const [starLightLeft, setStarLightLeft] = useState(0)\r\n  const [starDarkLeft, setStarDarkLeft] = useState(0)\r\n\r\n  const containerRef = createRef()\r\n\r\n  const arrayMaker = (length) => {\r\n    return Array.apply(null, Array(length))\r\n  }\r\n\r\n  useEffect(() => {\r\n    setStarLightLeft(getParallax(globalLeft, [0, max_screen_size], [0, -max_star_light_size]) + 'px')\r\n    setStarDarkLeft(getParallax(globalLeft, [0, max_screen_size], [0, -max_star_dark_size]) + 'px')\r\n    setLineLightLeft(getParallax(globalLeft, [0, max_screen_size], [0, -max_line_light_size]) + 'px')\r\n    setLineDarkLeft(getParallax(globalLeft, [0, max_screen_size], [0, -max_line_dark_size]) + 'px')\r\n    setCloudWhiteLeft(getParallax(globalLeft, [0, max_screen_size], [0, -(max_screen_size / 3.5)]) + 'px')\r\n    setCloudPinkLeft(getParallax(globalLeft, [0, max_screen_size], [0, -(max_screen_size / 5)]) + 'px')\r\n    setCloudIvoryLeft(getParallax(globalLeft, [0, max_screen_size], [0, -(max_screen_size / 6.5)]) + 'px')\r\n  }, [globalLeft])\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current !== null) {\r\n      containerRef.current.addEventListener('wheel', (event) => {\r\n        setGlobalLeft(l => Math.max(Math.min(l + event.deltaY, max_screen_size), 0))\r\n     \r\n        event.preventDefault()\r\n      })\r\n    }\r\n  }, [containerRef, max_screen_size])\r\n\r\n  return (\r\n    <motion.div id=\"container\" ref={containerRef}  >\r\n      <motion.div className=\"background\" animate={{ x: -globalLeft }} />\r\n      <div className=\"sky\">\r\n        <div className=\"sun\" />\r\n        <div className=\"sun-light\" />\r\n        <motion.div className=\"stars light\" animate={{ x: starLightLeft }}>\r\n          {\r\n            arrayMaker(10).map((item) => {\r\n              return <Star type=\"light\" />\r\n            })\r\n          }\r\n        </motion.div>\r\n        <motion.div className=\"stars dark\" animate={{ x: starDarkLeft }}>\r\n          {\r\n            arrayMaker(20).map((item) => {\r\n              return <Star type=\"dark\" />\r\n            })\r\n          }\r\n        </motion.div>\r\n        <motion.div className=\"lines light\" animate={{ x: lineLightLeft }}>\r\n          {\r\n            arrayMaker(5).map((item) => {\r\n              return <Line type='light' />\r\n            })\r\n          }\r\n        </motion.div>\r\n        <motion.div className=\"lines dark\" animate={{ x: lineDarkLeft }}>\r\n          {\r\n            arrayMaker(8).map((item) => {\r\n              return <Line type='dark' />\r\n            })\r\n          }\r\n        </motion.div>\r\n        <motion.div className=\"clouds white\" animate={{ x: cloudWhiteLeft }}>\r\n          <div className=\"cloud white\" />\r\n          <div className=\"cloud white\" />\r\n          <div className=\"cloud white\" />\r\n          <div className=\"cloud white\" />\r\n          <div className=\"cloud white\" />\r\n          <div className=\"cloud white\" />\r\n          <div className=\"cloud white\" />\r\n          <div className=\"cloud white\" />\r\n          <div className=\"cloud white\" />\r\n          <div className=\"cloud white\" />\r\n          <div className=\"cloud white\" />\r\n        </motion.div>\r\n        <motion.div className=\"clouds pink\" animate={{ x: cloudPinkLeft }}>\r\n          <div className=\"cloud pink\" />\r\n          <div className=\"cloud pink\" />\r\n          <div className=\"cloud pink\" />\r\n          <div className=\"cloud pink\" />\r\n          <div className=\"cloud pink\" />\r\n          <div className=\"cloud pink\" />\r\n          <div className=\"cloud pink\" />\r\n          <div className=\"cloud pink\" />\r\n          <div className=\"cloud pink\" />\r\n          <div className=\"cloud pink\" />\r\n          <div className=\"cloud pink\" />\r\n        </motion.div>\r\n        <motion.div className=\"clouds ivory\" animate={{ x: cloudIvoryLeft }}>\r\n          <div className=\"cloud ivory\" />\r\n          <div className=\"cloud ivory\" />\r\n          <div className=\"cloud ivory\" />\r\n          <div className=\"cloud ivory\" />\r\n        </motion.div>\r\n      </div>\r\n      <motion.div className=\"ground\" animate={{ x: -globalLeft }}>\r\n        <div className=\"seas\">\r\n          <Sea left={150} duration={4} />\r\n          <Sea left={100} duration={5.5} />\r\n          <Sea left={100} duration={5} />\r\n          <Sea left={180} duration={4.5} />\r\n        </div>\r\n      </motion.div>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default Background","import './App.scss';\nimport Background from './components/Background';\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <Background />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}